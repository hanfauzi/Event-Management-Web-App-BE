// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ORGANIZER
}

model User {
  id            String    @id @default(uuid())
  firstName     String    @map("first_name")
  lastName      String    @map("last_name")
  address       String
  phoneNumber   String    @map("phone_number")
  photoUrl      String    @map("photo_url")
  role          Role
  referralCode  String    @map("referral_code")
  username      String
  email         String    @unique
  password      String
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")

  // Relasi
  events        Event[]   @relation("OrganizerEvents")
  tickets       Ticket[]
  transactions  Transaction[]
  reviews       Review[]
  coupons       Coupon[]
  userPointLogs UserPointLog[]
  vouchers      Voucher[] @relation("OrganizerVouchers")

  @@map("users")
}

model Event {
  id           String      @id @default(uuid())
  organizerId  String      @map("organizer_id")
  title        String
  schedule     String
  category     String
  location     String
  description  String
  imageURL     String      @map("image_url")
  price        String
  maxCapacity  Int         @map("max_capacity")
  status       String
  createdAt    DateTime    @default(now()) @map("created_at")
  updatedAt    DateTime    @updatedAt @map("updated_at")
  deletedAt    DateTime?   @map("deleted_at")

  // Relasi
  organizer    User        @relation("OrganizerEvents", fields: [organizerId], references: [id])
  tickets      Ticket[]
  transactions Transaction[]
  reviews      Review[]
  vouchers     Voucher[]

  @@map("events")
}

model Ticket {
  id         String    @id @default(uuid())
  eventId    String    @map("event_id")
  userId     String    @map("user_id")
  quantity   Int
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")

  // Relasi
  event      Event     @relation(fields: [eventId], references: [id])
  user       User      @relation(fields: [userId], references: [id])

  @@map("tickets")
}

model Transaction {
  id             String    @id @default(uuid())
  userId         String    @map("user_id")
  eventId        String    @map("event_id")
  quantity       Int
  totalPrice     Int       @map("total_price")
  usedPoints     Int       @map("used_points")
  finalPrice     Int       @map("final_price")
  status         String
  paymentProofUrl String?  @map("payment_proof_url")
  expiresAt      DateTime  @map("expires_at")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  // Relasi
  user           User      @relation(fields: [userId], references: [id])
  event          Event     @relation(fields: [eventId], references: [id])

  @@map("transactions")
}

model Review {
  id         String   @id @default(uuid())
  userId     String   @map("user_id")
  eventId    String   @map("event_id")
  rating     Int
  comment    String
  createdAt  DateTime @default(now()) @map("created_at")

  // Relasi
  user       User     @relation(fields: [userId], references: [id])
  event      Event    @relation(fields: [eventId], references: [id])

  @@map("reviews")
}

model Voucher {
  id            String    @id @default(uuid())
  organizerId   String    @map("organizer_id")
  code          String
  discountAmount Int      @map("discount_amount")
  startDate     DateTime  @map("start_date")
  endDate       DateTime  @map("end_date")
  eventId       String    @map("event_id")

  // Relasi
  organizer     User      @relation("OrganizerVouchers", fields: [organizerId], references: [id])
  event         Event     @relation(fields: [eventId], references: [id])

  @@map("vouchers")
}

model Coupon {
  id            String    @id @default(uuid())
  userId        String    @map("user_id")
  code          String
  discountAmount Int      @map("discount_amount")
  expiresAt     DateTime  @map("expires_at")
  used          Boolean

  // Relasi
  user          User      @relation(fields: [userId], references: [id])

  @@map("coupons")
}

model UserPointLog {
  id        String    @id @default(uuid())
  userId    String    @map("user_id")
  amount    Int
  reason    String
  expiresAt DateTime? @map("expires_at")
  createdAt DateTime  @default(now()) @map("created_at")

  // Relasi
  user      User      @relation(fields: [userId], references: [id])

  @@map("user_point_logs")
}
